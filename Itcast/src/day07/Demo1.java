package day07;

/*
对象：真实存在的唯一的事物。

类： 同一种类型的事物公共属性与公共行为的抽取。


java面向对象语言： 

核心思想： 找适合的对象做适合的事情.


找对象的方式：
	
	方式一： sun已经定义好了很多了类，我们只需要认识这些类即可创建对象使用。
	方式二： 我们需要自定义类，通过自定义类创建对象。

在整理笔记的过程中对自己有疑问的概念使用代码验证或者推翻它。

自定义类三步骤：
	1. 自定义一个类。
		  class 类{
			事物 的公共属性使用成员 变量描述


			事物的公共行为使用函数描述。
		  }
	2. 可以通过类创建对象。
	3. 访问(设置)对象的属性或者调用对象的方法。


成员变量与局部变量 的区别：
	1. 自定义的位置区别：
			1. 成员变量是定义在方法之外，类之内的变量。 
			2. 局部变量是声明在方法之内的变量。
	2. 作用上的区别： 
			1. 成员变量的作用描述一类事物的属性。
			2. 局部变量的作用是提供一个变量给方法内部使用的。
	3. 生命周期的区别；
			1. 成员变量随着对象的创建而存在，随着对象的消失而消失。
			2. 局部变量是调用到了对应的方法执行 到了创建该变量的语句时存在，一旦出了自己的作用域马上从内存中消失。
	4. 初始值的区别：
			1. 成员变量是有默认的初始值的。
			2. 局部变量是没有默认的初始值的，必须要先初始化才能使用。

	
匿名对象： 没有引用类型变量指向的对象就称作为匿名对象。

匿名对象要注意的细节：
		1. 一般不会给匿名对象的属性赋值，因为永远都没法获取到。
		2. 两个匿名对象永远都不可能是同一个对象。

匿名对象好处：简化书写。


匿名对象的应用场景：
	1. 如果调用一个对象的方法一次时，然后这个对象就不再使用，那么这时候可以使用匿名对象。
	2. 可以作为实参调用一个函数。

封装：


封装的步骤：
	1. 使用private修饰需要被封装的属性.
	2. 根据需要提供get或者set方法设置以及获取属性。

封装的好处：
	1. 提高了数据的安全性。
	2. 操作简单。
	3. 隐藏了实现。

注意：一般实体类的属性我们都会封装起来。	






*/
class  Demo1
{
	public static void main(String[] args) 
	{
		int i = 10;
		System.out.println("i="+i);
	}


}
